Client
¯¯¯¯¯¯
[ ] FIX : Partie : Certaines arènes ne sont pas correctement centrées en hauteur
[ ] ADD : Partie - RUNNING : Ajouter des carrés qui se remplissent pour indiquer le nombre de zones possédées
[ ] ADD : Partie - RUNNING : Afficher les nouvelles dominations de zone au fur et à mesure de la saisie
[ ] ADD : Partie - RUNNING : Valider un mot avec un ou plusieurs jokers
[ ] MOD : Partie - PAUSED : Afficher les stats (score, zones, rounds) dans un tableau
[ ] MOD : Partie - READY, PAUSED, ROUND_OVER, GAME_OVER : Mettre le texte et les boutons au-dessus de l'arène pour qu'elle reste visible en entier 
[ ] ADD : Editeur / Types - Mettre un libellé pour les types de cellule
[ ] ADD : Options - Ajouter un paramétrage pour qu'un joueur choisisse son marqueur de possession.
	- Dans les options, c'est le choix par défaut. Au démarrage d'une partie, il choisit un marqueur parmi ceux qu'il possède.
	- Le joueur qui arrive dans une partie doit choisir un marqueur différent de ceux des autres joueurs.
[ ] DEV : Tester le passage d'une partie en cours à une autre et vérifier que tous les éléments en cours sont sauvegardés :
	- Carrés de possession de zones
	- Joueur, round, coup courants
	- Données des joueurs (nombre de coups/rounds, score, nom...)
	- Mot en cours de sélection
	- Dernier message d'information

Serveur
¯¯¯¯¯¯¯
[ ] ADD : DB - Créer le schéma
	- titles : Titre gagné par le joueur (thrace, provocator...)
		- id
		- title
		- nb_required_stars : Nombre d'étoiles requises pour obtenir ce titre
	- plessings : Bénédictions gagnées par le joueur
		- id
		- blessing
	- player
		- id
		- pseudo
		- title_id
		- score : Nombre de points du joueur pour les ligues et le match-making
	- player_blessings
		- player_id
		- blessing_id
	- game : Une partie multi-joueurs
		- id
		- creation_time : Date / heure de création
		- type_id : Type de partie (D, L, T => Duel, League, Tournament)
		- cur_round
		- cur_turn
		- cur_player : Joueur dont c'est le tour
		- first_player : Joueur ayant débuté ce round
		- game_over : Indique si la partie est terminée		
		- arena : JSON de l'arène au moment où la partie a été sauvegardée
	- game_players : Les joueurs participant à une partie
		- game_id
		- player_id
		- place : Ordre de jeu du joueur (premier à jouer, le second...)
	- game_words_played : Les mots précédemment joués, dans l'ordre
		- game_id
		- time
		- player_id
		- word_id
	- game_last_play : Dernières cellules sélectionnées, dans l'ordre. Si nécessaire, on peut déduire le joueur en fonction de l'owner des cellules
		- game_id
		- place : Ordre de sélection de la lettre
		- cell_x : Abscisse de la cellule jouée
		- cell_y : Ordonnée de la cellule jouée
	- game_chats : Les messages échangés
		- game_id
		- time
		- message
	- words : Dictionnaire contenant les mots existants
		- id
		- word : Le mot (en majuscules)
		- status : Indique si le mot est valide (et donc utilisable), en attente de validation par l'admin ou supprimé (reste dans la base jusqu'à ce qu'aucun jeu ne s'en serve) (V, P, R => valid, pending, removed)
		- version : Indique la version dans laquelle a eut lieu la dernière modification de status. On peut ainsi facilement stocker la dernière version de la base et regarder, à chaque démarrage, si de nouveaux mots ont été validés